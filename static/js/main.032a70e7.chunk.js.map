{"version":3,"sources":["components/ToDoForm.js","components/ToDo.js","components/ToDoList.js","App.js","index.js"],"names":["shortid","require","ToDoForm","state","value","text","handleChange","event","target","setState","id","generate","isCompleted","addList","trim","props","className","TextField","placeholder","rowsMax","this","onChange","style","width","IconButton","color","aria-label","onClick","React","Component","ToDo","display","toggle","todo","fontSize","textDecoration","Tooltip","title","placement","arrow","delete","ToDoList","list","todoShow","addToList","console","log","toggleState","newList","i","length","filter","deleteCompleted","changeView","s","todos","ButtonGroup","Button","variant","marginTop","map","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.032a70e7.chunk.js","sourcesContent":["import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport \"./ToDoForm.css\";\n\nconst shortid = require(\"shortid\");\n\nclass ToDoForm extends React.Component {\n  state = {\n    value: { text: \"\" },\n  };\n\n  handleChange = (event) => {\n    if (event.target.value !== \"\") {\n      this.setState({\n        value: {\n          text: event.target.value,\n          id: shortid.generate(),\n          isCompleted: false,\n        },\n      });\n    }\n  };\n\n  addList = () => {\n    if (this.state.value.text.trim() !== \"\") {\n      this.props.addList(this.state.value);\n    }\n    this.setState({\n      value: { text: \"\" },\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"form\">\n        <TextField\n          id=\"standard\"\n          placeholder=\"Enter here\"\n          rowsMax={4}\n          value={this.state.value.text}\n          onChange={this.handleChange}\n          style={{ width: \"40%\" }}\n        />\n        <IconButton\n          color=\"primary\"\n          aria-label=\"add button\"\n          onClick={this.addList}\n        >\n          +\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nexport default ToDoForm;\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst ToDo = (props) => {\n  \n  return (\n    <div style={{ display:'flex' }}>\n       <div\n      onClick={() => props.toggle(props.todo.id)}\n      style={{  fontSize: '35px', textDecoration: props.todo.isCompleted ? \"line-through\" : \"\" }}\n    >\n      {props.todo.text} \n    </div>\n    <Tooltip title=\"Delete\" placement=\"right\" arrow>\n    <IconButton onClick={() => props.delete(props.todo.id)} > <CancelIcon/></IconButton>\n    </Tooltip>\n    </div>\n  );\n};\n\nexport default ToDo;\n","import React from \"react\";\nimport ToDoForm from \"./ToDoForm\";\nimport ToDo from \"./ToDo\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport \"./ToDoList.css\";\n\nclass ToDoList extends React.Component {\n  state = {\n    list: [],\n    todoShow: \"all\",\n  };\n\n  addToList = (value) => {\n    this.setState(\n      {\n        list: [value, ...this.state.list],\n      },\n      () => {\n        console.log(this.state.list);\n      }\n    );\n  };\n\n  toggleState = (id) => {\n    let newList = [...this.state.list];\n    for (let i = 0; i < newList.length; i++) {\n      if (newList[i].id === id) {\n        newList[i].isCompleted = !newList[i].isCompleted;\n      }\n    }\n    this.setState({\n      list: [...newList],\n    });\n  };\n\n  delete = (id) => {\n    this.setState({\n      list: this.state.list.filter((todo) => {\n        return todo.id !== id;\n      }),\n    });\n  };\n\n  deleteCompleted = () => {\n    this.setState({\n      list: this.state.list.filter((todo) => {\n        return !todo.isCompleted;\n      }),\n    });\n  };\n\n  changeView = (s) => {\n    this.setState({\n      todoShow: s,\n    });\n    console.log(s);\n  };\n\n  render() {\n    let todos = [];\n\n    if (this.state.todoShow === \"all\") {\n      todos = this.state.list;\n    } else if (this.state.todoShow === \"active\") {\n      todos = this.state.list.filter((todo) => !todo.isCompleted);\n    } else if (this.state.todoShow === \"completed\") {\n      todos = this.state.list.filter((todo) => todo.isCompleted);\n    }\n    return (\n      <div>\n        <header id=\"heading\">\n          <h1>To-Do List</h1>\n          <p>\n            No of active todos :{\" \"}\n            {this.state.list.filter((todo) => todo.isCompleted !== true).length}\n          </p>\n          <ButtonGroup>\n            <Button\n              color = \"primary\"\n              variant = {this.state.todoShow === \"all\" ? \"contained\" : \"\"}\n              onClick = {() => this.changeView(\"all\")}\n            >\n              {\" \"}\n              All{\" \"}\n            </Button>\n            <Button\n             color = \"primary\"\n             variant = {this.state.todoShow === \"active\" ? \"contained\" : \"\"}\n             onClick={() => this.changeView(\"active\")}\n            >\n              {\" \"}\n              Active{\" \"}\n            </Button>\n            <Button\n             color = \"primary\"\n             variant = {this.state.todoShow === \"completed\" ? \"contained\" : \"\"}\n             onClick={() => this.changeView(\"completed\")}\n            >\n              {\" \"}\n              Completed{\" \"}\n            </Button>\n          </ButtonGroup>\n          <Button\n            onClick={this.deleteCompleted}\n            color=\"primary\"\n            variant=\"outlined\"\n            style={{ marginTop: \"0.3em\" }}\n          >\n            Delete Completed\n          </Button>\n        </header>\n        <ToDoForm addList={this.addToList} />\n        <div id=\"list\">\n          {todos.map((todo) => {\n            return (\n              <ToDo\n                key={todo.id}\n                todo={todo}\n                toggle={this.toggleState}\n                delete={this.delete}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ToDoList;\n","import React from 'react';\nimport ToDoList from './components/ToDoList'\n\nclass App extends React.Component {\n  render() {\n    return <div>\n      <ToDoList />\n    </div>\n  }\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n \nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n \n"],"sourceRoot":""}